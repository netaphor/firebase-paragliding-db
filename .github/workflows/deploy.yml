name: Build and Deploy to Firebase

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install root dependencies
        run: npm ci

      - name: Install Gulp CLI globally
        run: npm install --global gulp-cli

      - name: Run Gulp build
        run: npm run build

      - name: Install Cloud Function dependencies
        run: |
          cd functions
          npm ci
          cd .. # Go back to the root directory for the next steps

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Get secrets from Secret Manager
        id: sm-secrets # ID added to reference the step's outputs
        uses: google-github-actions/get-secretmanager-secrets@v1
        with:
          secrets: |
            METOFFICE_API_URL: projects/fb-paragliding-db/secrets/METOFFICE_API_URL/versions/latest
            PURETRACK_API_KEY: projects/fb-paragliding-db/secrets/PURETRACK_API_KEY/versions/latest
            PURETRACK_BEARER_TOKEN: projects/fb-paragliding-db/secrets/PURETRACK_BEARER_TOKEN/versions/latest
            TELEGRAM_API_KEY: projects/fb-paragliding-db/secrets/TELEGRAM_API_KEY/versions/latest
            UK_TIDAL_API: projects/fb-paragliding-db/secrets/UK_TIDAL_API/versions/latest

      - name: Set Firebase function secrets
        if: github.event_name == 'push'
        # This 'env' block maps the outputs from the step above to 
        # environment variables that the 'run' commands can use.
        env:
          METOFFICE_API_URL: ${{ steps.sm-secrets.outputs.METOFFICE_API_URL }}
          PURETRACK_API_KEY: ${{ steps.sm-secrets.outputs.PURETRACK_API_KEY }}
          PURETRACK_BEARER_TOKEN: ${{ steps.sm-secrets.outputs.PURETRACK_BEARER_TOKEN }}
          TELEGRAM_API_KEY: ${{ steps.sm-secrets.outputs.TELEGRAM_API_KEY }}
          UK_TIDAL_API: ${{ steps.sm-secrets.outputs.UK_TIDAL_API }}
        run: |
          echo "--- DEBUGGING: Checking for presence of environment variables ---"
          env | grep METOFFICE_API_URL
          env | grep PURETRACK_API_KEY
          env | grep PURETRACK_BEARER_TOKEN
          env | grep TELEGRAM_API_KEY
          env | grep UK_TIDAL_API
          echo "------------------------------------------------------------------"

          # The variables are now in the environment, so the firebase command will find them.
          # We also pipe the value in, which is a robust way to handle special characters.
          npm install -g firebase-tools
          echo "$METOFFICE_API_URL" | firebase functions:secrets:set METOFFICE_API_URL --project fb-paragliding-db
          echo "$PURETRACK_API_KEY" | firebase functions:secrets:set PURETRACK_API_KEY --project fb-paragliding-db
          echo "$PURETRACK_BEARER_TOKEN" | firebase functions:secrets:set PURETRACK_BEARER_TOKEN --project fb-paragliding-db
          echo "$TELEGRAM_API_KEY" | firebase functions:secrets:set TELEGRAM_API_KEY --project fb-paragliding-db
          echo "$UK_TIDAL_API" | firebase functions:secrets:set UK_TIDAL_API --project fb-paragliding-db

      - name: Deploy to Firebase Hosting and Functions
        if: github.event_name == 'push'
        run: |
          npm install -g firebase-tools
          firebase deploy --only hosting,functions --project fb-paragliding-db --token "${{ secrets.FIREBASE_TOKEN }}"